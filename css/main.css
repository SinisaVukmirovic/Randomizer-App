@import url('https://fonts.googleapis.com/css2?family=Gugi&display=swap');

@import url('./variables.css');
@import url('./misc-elems.css');
@import url('./animations.css');

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    min-height: 100vh;
    background: var(--bg-clr);
    overflow: hidden;
    background-image: url("../assets/bg.jpg");
    background-size: cover;
    background-position: center;
    font-family: "Gugi", impact, sans-serif;
    position: relative;
}
  
h1 {
    color: #FAA;
    text-shadow: 0 -40px 100px, 
                 0 0 2px, 0 0 1em var(--theme-clr), 
                 0 0 .5em var(--theme-clr), 
                 0 0 .1em var(--theme-clr), 
                 0 10px 3px var(--bg-clr);
    text-align: center;
    text-transform: uppercase;
    font-size: 7rem;
    letter-spacing: 10px;
    padding-top: 5rem;
    user-select: none;
}
    h1 span.nd {
        animation: blink-neon 5s linear infinite;
    }
    h1 span.z {
        position: relative;
        display: inline-block;
        bottom: -1.5rem;
        transform: rotate(17deg);
        opacity: .7;
    }

.speech {
    position: absolute;
    left: 10%;
    top: 35%;
    color: var(--font-primary);
    font-family: serif;
    font-weight: bold;
    font-size: 1.5rem;
    font-style: italic;
    opacity: 0;
    animation: fadeIn 250ms ease-in forwards var(--base-delay);
}
    .speech .red {
        font-family: "Gugi", impact, sans-serif;
        color: var(--theme-clr);
        font-size: 1.25rem;
        font-style: normal;
    }
    .speech .delayed {
        opacity: 0;
        animation: fadeIn 250ms ease-in forwards var(--delayed-speech);
    }
    .speech .js-randomized {
        font-size: 1.5rem;
        font-family: "Gugi", impact, sans-serif;
        font-style: normal;
    }

input[type='text'] {
    font-size: 1rem;
    padding: .5rem;
    margin: .5rem .25rem;
    outline: none;
    border: 1px solid var(--primary-clr);
    background-color: rgba(0, 0, 0, .3);
    color: var(--font-primary);
}
    input[type='text']::placeholder {
        color: var(--font-secondary);
    }

button, 
input[type='submit'] {
    border: 1px solid var(--primary-clr);
    background-color: var(--theme-clr);
    color: var(--font-primary);
    font-weight: bold;
    padding: .5rem 0;
    margin: .5rem .25rem;
    text-transform: uppercase;
    cursor: pointer;
}
    button:active,
    input[type='submit']:active {
        transform: scale(.98);
    }
    button:disabled {
        background-color: rgba(255, 0, 0, .3);
        cursor: not-allowed;
    }

.app {
    position: relative;
    z-index: 11;
    display: flex;
    justify-content: space-between;
    align-items: space-between;
    flex-direction: column;
    width: 50%;
    background-color: rgba(255, 255, 255, .075);
    max-height: 50vh;
    min-height: 35vh;
    margin: 3rem 15% 0 auto;
    padding: 1rem;
    transform: scaleX(0) scaleY(0);
    transform-origin: center;
    animation: showApp 1.5s forwards var(--show-app-delay) ease-in-out;
}
.app::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background-color: var(--secondary-clr);
    visibility: visible;
    animation: hideElem 200ms forwards var(--hide-line-delay);
}
    .app form,
    .app .controls {
        display: flex;
        width: 50%;
        margin: 0 auto;
    }
    form #inputElem,
    .controls #startBtn {
        width: 80%;
    }
    form #addBtn,
    .controls #resetBtn {
        width: 20%;
    }

#items {
    width: 100%;
    max-height: 50rem;
    font-family: "Gugi", impact, sans-serif;
    font-size: 1.25rem;
    color: var(--font-primary);
    text-transform: capitalize;
    margin: 1rem 0;
    padding: 1rem;
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    flex-wrap: wrap;
    /* overflow-y: auto; */
    overflow: auto;
}
    .item {
        padding: .25rem .75rem;
        margin: .25rem;
        border: 2px solid var(--theme-clr);
        background-color: rgba(0, 0, 0, .2);
        transition: transform 2s linear;
    }
        .item.js-highlight {
            background-color: var(--theme-clr);
            transform: scale(1.25);
        }

#resetBtn {
  background-color: var(--bg-clr);
}

/* custom scrollbar */
::-webkit-scrollbar {
  width: 4px;
  background: var(--primary-clr);
}
/* Handle */
::-webkit-scrollbar-thumb {
  background: var(--theme-clr);
}
/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: firebrick; 
}

@media screen and (max-width: 1023px) {
  .desktop-only {
      display: grid;
  }
}